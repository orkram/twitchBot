version: "3.7"
services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'twitchbot-rabbitmq'
    hostname: 'rabbitmq'
    restart: always
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/home/arkansweet/rabbitmq/lib
        - ~/.docker-conf/rabbitmq/log/:/home/arkansweet/rabbitmq/log
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5    
    networks:
        internal_network:
            ipv4_address: 172.24.24.45

  postgres:
    image: arkadzizaleuski/twitchbot-postgres
    container_name: 'twitchbot-postgres'
    hostname: 'postgres'
    restart: always
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=twitchdb
    logging:
        options:
          max-size: 10m
          max-file: "3"
    ports:
        - '5432:5432'
    volumes:
        - ./postgres-data:/var/lib/postgresql/data
        # copy the sql script to create tables
        - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables1.sql
    networks:
        internal_network:
            ipv4_address: 172.24.24.46
  core:
    image: arkadzizaleuski/twitchbot:latest
    ports:
        - '8083:8083'
        - '443:443'
    restart: always
    networks:
       internal_network:
            ipv4_address: 172.24.24.47
    depends_on:
        - rabbitmq
        - postgres
    links: 
        - rabbitmq
        
  botui:
    image: arkadzizaleuski/twitchbotui:latest
    ports:
        - '8081:80'
    restart: always
    networks:
        - internal_network
networks:
  internal_network:
    ipam:
        driver: default
        config:
            - subnet: 172.24.24.0/24


